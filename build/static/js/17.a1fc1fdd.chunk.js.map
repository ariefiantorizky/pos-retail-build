{"version":3,"sources":["components/ExcelBuilder/ExcelPlugin/elements/ExcelColumn.js","components/ExcelBuilder/ExcelPlugin/elements/ExcelSheet.js","components/ExcelBuilder/ExcelPlugin/utils/DataUtil.js","components/ExcelBuilder/ExcelPlugin/components/ExcelFile.js","components/ExcelBuilder/index.js","pages/POS/Report/DetailItem/excel.js","pages/POS/Report/DetailItem/index.js"],"names":["ExcelColumn","React","Component","render","propsTypes","label","PropTypes","string","isRequired","value","oneOfType","number","bool","func","ExcelSheet","name","data","arrayOf","object","dataSet","array","children","propValue","key","Error","strToArrBuffer","s","buf","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","dateToNumber","v","date1904","Date","parse","UTC","getCell","cellRef","ws","cell","isDate","style","t","z","XLSX","SSF","table","fixRange","range","R","C","rowCount","xSteps","r","c","e","ExcelFile","constructor","props","super","fileExtensions","defaultFileExtension","hideElement","this","download","handleDownload","bind","createSheetData","sheet","columns","sheetData","Children","map","column","forEach","row","sheetRow","itemValue","push","isNaN","wb","SheetNames","Sheets","utils","encode_cell","encode_range","excelSheetFromAoA","undefined","dataSetItem","xS","ySteps","yS","columnsWidth","col","index","width","wpx","fontBold","font","bold","headerCellStyle","title","getHeaderCell","excelSheetFromDataSet","fileExtension","getFileExtension","fileName","getFileName","wbout","write","bookType","bookSST","type","saveAs","Blob","filename","getFileNameWithExtension","extension","slugs","split","indexOf","element","onClick","any","propName","child","defaultProps","ReactExport","alignRight","alignment","horizontal","wch","columnsHeader","ExcelAllJournal","dataitem","date","numFormat","numFmt","dataHeader","el","ItemCode","ItemName","CateName","QtySi","UnitPrice","Amount","multiDataSet","ReportCustomer","connect","transaction","report","contentStatus","reportSalesItem","withRouter","handleSearch","dispatch","from","to","state","payload","actions","REPORT_SALES_ITEM","componentRef","createRef","modalReturn","moment","startOf","format","componentWillUnmount","SET_STATE","loadingReportItem","align","d","currencyFormat","className","layout","Item","onChange","setState","target","dataSource","size","loading","scroll","y"],"mappings":"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","file":"static/js/17.a1fc1fdd.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ExcelColumn extends React.Component {\n  static propsTypes = {\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.bool, PropTypes.string, PropTypes.func])\n      .isRequired,\n  }\n\n  render() {\n    return null\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ExcelColumn from './ExcelColumn'\n\nexport default class ExcelSheet extends React.Component {\n  static propsTypes = {\n    name: PropTypes.string.isRequired,\n    data: PropTypes.arrayOf(PropTypes.object),\n    dataSet: PropTypes.arrayOf(PropTypes.object),\n    value: PropTypes.oneOfType([PropTypes.array, PropTypes.func]).isRequired,\n    children: PropTypes.arrayOf((propValue, key) => {\n      const type = propValue[key]\n\n      if (type !== ExcelColumn) {\n        throw new Error('<ExcelSheet> can only have <ExcelColumn> as children')\n      }\n    }).isRequired,\n  }\n\n  render() {\n    return null\n  }\n}\n","import XLSX from 'tempa-xlsx'\n\nconst strToArrBuffer = s => {\n  const buf = new ArrayBuffer(s.length)\n  const view = new Uint8Array(buf)\n\n  for (let i = 0; i !== s.length; i += 1) {\n    // eslint-disable-next-line no-bitwise\n    view[i] = s.charCodeAt(i) & 0xff\n  }\n\n  return buf\n}\n\nconst dateToNumber = (v, date1904) => {\n  if (date1904) {\n    v += 1462\n  }\n\n  const epoch = Date.parse(v)\n\n  return (epoch - new Date(Date.UTC(1899, 11, 30))) / (24 * 60 * 60 * 1000)\n}\n\nconst excelSheetFromDataSet = dataSet => {\n  /*\n    Assuming the structure of dataset\n    {\n        xSteps?: number; //How many cells to skips from left\n        ySteps?: number; //How many rows to skips from last data\n        columns: [array | string]\n        data: [array_of_array | string|boolean|number | CellObject]\n        fill, font, numFmt, alignment, and border\n    }\n     */\n  if (dataSet === undefined || dataSet.length === 0) {\n    return {}\n  }\n\n  const ws = {}\n  const range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } }\n  let rowCount = 0\n\n  dataSet.forEach(dataSetItem => {\n    const { columns, data, xSteps: xS, ySteps: yS } = dataSetItem\n\n    const xSteps = typeof xS === 'number' ? xS : 0\n    const ySteps = typeof yS === 'number' ? yS : 0\n    if (dataSet === undefined || dataSet.length === 0) {\n      return\n    }\n\n    rowCount += ySteps\n\n    const columnsWidth = []\n    if (columns.length >= 0) {\n      columns.forEach((col, index) => {\n        const cellRef = XLSX.utils.encode_cell({ c: xSteps + index, r: rowCount })\n        fixRange(range, 0, 0, rowCount, xSteps, ySteps)\n        // let colTitle = col;\n        if (typeof col === 'object') {\n          // colTitle = col.title;\n          columnsWidth.push(\n            col.width || { wpx: 80 },\n          ) /* wch (chars), wpx (pixels) - e.g. [{wch:6},{wpx:50}] */\n        }\n        getHeaderCell(/* colTitle, */ col, cellRef, ws)\n      })\n\n      rowCount += 1\n    }\n\n    if (columnsWidth.length > 0) {\n      ws['!cols'] = columnsWidth\n    }\n\n    // eslint-disable-next-line no-plusplus\n    for (let R = 0; R !== data.length; ++R, rowCount++) {\n      // eslint-disable-next-line no-plusplus\n      for (let C = 0; C !== data[R].length; ++C) {\n        const cellRef = XLSX.utils.encode_cell({ c: C + xSteps, r: rowCount })\n        fixRange(range, R, C, rowCount, xSteps, ySteps)\n        getCell(data[R][C], cellRef, ws)\n      }\n    }\n  })\n\n  if (range.s.c < 10000000) {\n    ws['!ref'] = XLSX.utils.encode_range(range)\n  }\n\n  return ws\n}\n\nfunction getHeaderCell(v, cellRef, ws) {\n  const cell = {}\n  const fontBold = { font: { bold: true } }\n  const headerCellStyle = { ...v.style, ...fontBold }\n  cell.v = v.title\n  cell.t = 's'\n  cell.s = headerCellStyle\n  ws[cellRef] = cell\n}\n\nfunction getCell(v, cellRef, ws) {\n  // assume v is indeed the value. for other cases (object, date...) it will be overriden.\n  const cell = { v }\n  if (v === null) {\n    return\n  }\n\n  const isDate = v instanceof Date\n  if (!isDate && typeof v === 'object') {\n    cell.s = v.style\n    cell.v = v.value\n    v = v.value\n  }\n\n  if (typeof v === 'number') {\n    cell.t = 'n'\n  } else if (typeof v === 'boolean') {\n    cell.t = 'b'\n  } else if (isDate) {\n    cell.t = 'n'\n    // eslint-disable-next-line prefer-destructuring\n    cell.z = XLSX.SSF.table[14]\n    cell.v = dateToNumber(cell.v)\n  } else {\n    cell.t = 's'\n  }\n  ws[cellRef] = cell\n}\n\nfunction fixRange(range, R, C, rowCount, xSteps /* ySteps */) {\n  if (range.s.r > R + rowCount) {\n    range.s.r = R + rowCount\n  }\n\n  if (range.s.c > C + xSteps) {\n    range.s.c = C + xSteps\n  }\n\n  if (range.e.r < R + rowCount) {\n    range.e.r = R + rowCount\n  }\n\n  if (range.e.c < C + xSteps) {\n    range.e.c = C + xSteps\n  }\n}\n\nconst excelSheetFromAoA = data => {\n  const ws = {}\n  const range = { s: { c: 10000000, r: 10000000 }, e: { c: 0, r: 0 } }\n\n  // eslint-disable-next-line no-plusplus\n  for (let R = 0; R !== data.length; ++R) {\n    // eslint-disable-next-line no-plusplus\n    for (let C = 0; C !== data[R].length; ++C) {\n      if (range.s.r > R) {\n        range.s.r = R\n      }\n\n      if (range.s.c > C) {\n        range.s.c = C\n      }\n\n      if (range.e.r < R) {\n        range.e.r = R\n      }\n\n      if (range.e.c < C) {\n        range.e.c = C\n      }\n\n      const cell = { v: data[R][C] }\n      if (cell.v === null) {\n        // eslint-disable-next-line no-continue\n        continue\n      }\n\n      const cellRef = XLSX.utils.encode_cell({ c: C, r: R })\n      if (typeof cell.v === 'number') {\n        cell.t = 'n'\n      } else if (typeof cell.v === 'boolean') {\n        cell.t = 'b'\n      } else if (cell.v instanceof Date) {\n        cell.t = 'n'\n        // eslint-disable-next-line prefer-destructuring\n        cell.z = XLSX.SSF.table[14]\n        cell.v = dateToNumber(cell.v)\n      } else {\n        cell.t = 's'\n      }\n\n      ws[cellRef] = cell\n    }\n  }\n\n  if (range.s.c < 10000000) {\n    ws['!ref'] = XLSX.utils.encode_range(range)\n  }\n\n  return ws\n}\n\nexport { strToArrBuffer, dateToNumber, excelSheetFromAoA, excelSheetFromDataSet }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { saveAs } from 'file-saver'\nimport XLSX from 'tempa-xlsx'\n\nimport ExcelSheet from '../elements/ExcelSheet'\nimport { strToArrBuffer, excelSheetFromAoA, excelSheetFromDataSet } from '../utils/DataUtil'\n\nclass ExcelFile extends React.Component {\n  fileExtensions = ['xlsx', 'xls', 'csv', 'txt', 'html']\n\n  defaultFileExtension = 'xlsx'\n\n  static props = {\n    hideElement: PropTypes.bool,\n    filename: PropTypes.string,\n    fileExtension: PropTypes.string,\n    element: PropTypes.any,\n    children(props, propName /* componentName */) {\n      React.Children.forEach(props[propName], child => {\n        if (child.type !== ExcelSheet) {\n          throw new Error('<ExcelFile> can only have <ExcelSheet> as children. ')\n        }\n      })\n    },\n  }\n\n  static defaultProps = {\n    hideElement: false,\n    filename: 'excel',\n    fileExtension: 'xlsx',\n    // eslint-disable-next-line react/button-has-type\n    element: <button>Excel</button>,\n  }\n\n  constructor(props) {\n    super(props)\n\n    const { hideElement } = this.props\n    if (hideElement) {\n      this.download()\n    } else {\n      this.handleDownload = this.download.bind(this)\n    }\n\n    this.createSheetData = this.createSheetData.bind(this)\n  }\n\n  createSheetData(sheet) {\n    const columns = sheet.props.children\n    const sheetData = [React.Children.map(columns, column => column.props.label)]\n    const data = typeof sheet.props.data === 'function' ? sheet.props.data() : sheet.props.data\n\n    data.forEach(row => {\n      const sheetRow = []\n\n      React.Children.forEach(columns, column => {\n        const getValue =\n          typeof column.props.value === 'function' ? column.props.value : r => r[column.props.value]\n        const itemValue = getValue(row)\n        // eslint-disable-next-line no-restricted-globals\n        sheetRow.push(isNaN(itemValue) ? itemValue || '' : itemValue)\n      })\n\n      sheetData.push(sheetRow)\n    })\n\n    return sheetData\n  }\n\n  download() {\n    const { children } = this.props\n    const wb = {\n      SheetNames: React.Children.map(children, sheet => sheet.props.name),\n      Sheets: {},\n    }\n\n    React.Children.forEach(children, sheet => {\n      if (typeof sheet.props.dataSet === 'undefined' || sheet.props.dataSet.length === 0) {\n        wb.Sheets[sheet.props.name] = excelSheetFromAoA(this.createSheetData(sheet))\n      } else {\n        wb.Sheets[sheet.props.name] = excelSheetFromDataSet(sheet.props.dataSet)\n      }\n    })\n\n    const fileExtension = this.getFileExtension()\n    const fileName = this.getFileName()\n    const wbout = XLSX.write(wb, { bookType: fileExtension, bookSST: true, type: 'binary' })\n\n    saveAs(new Blob([strToArrBuffer(wbout)], { type: 'application/octet-stream' }), fileName)\n  }\n\n  getFileName() {\n    const { filename } = this.props\n    if (filename === null || typeof filename !== 'string') {\n      throw Error('Invalid file name provided')\n    }\n    return this.getFileNameWithExtension(filename, this.getFileExtension())\n  }\n\n  getFileExtension() {\n    const { fileExtension, filename } = this.props\n\n    let extension = fileExtension\n\n    if (extension.length === 0) {\n      const slugs = filename.split('.')\n      if (slugs.length === 0) {\n        throw Error('Invalid file name provided')\n      }\n      extension = slugs[slugs.length - 1]\n    }\n\n    if (this.fileExtensions.indexOf(extension) !== -1) {\n      return extension\n    }\n\n    return this.defaultFileExtension\n  }\n\n  getFileNameWithExtension(filename, extension) {\n    return `${filename}.${extension}`\n  }\n\n  render() {\n    const { hideElement, element } = this.props\n\n    if (hideElement) {\n      return null\n    }\n    /* eslint-disable */\n    return <span onClick={this.handleDownload}>{element}</span>\n  }\n}\n\nexport default ExcelFile\n","import ExcelFile from './ExcelPlugin/components/ExcelFile'\nimport ExcelSheet from './ExcelPlugin/elements/ExcelSheet'\nimport ExcelColumn from './ExcelPlugin/elements/ExcelColumn'\n\nExcelFile.ExcelSheet = ExcelSheet\nExcelFile.ExcelColumn = ExcelColumn\n\nconst ReactExport = {\n  ExcelFile,\n  ExcelSheet,\n  ExcelColumn,\n}\n\nexport default ReactExport\n// exports.modules = {\n//     ExcelFile,\n//     ExcelSheet,\n//     ExcelColumn\n// };\n","import React from 'react'\nimport { Button } from 'antd'\n\nimport ReactExport from '../../../../components/ExcelBuilder'\n\n\nconst { ExcelFile } = ReactExport\nconst { ExcelSheet /* ExcelColumn */ } = ExcelFile\n\nconst alignRight = { alignment: { horizontal: 'right' } }\nconst numFmt = '#,##0.00;(#,##0.00)'\n\nconst columns = [\n\n  { title: 'Kode_Produk', width: { wch: 15 } }, // char width\n  { title: 'Nama_Produk', width: { wch: 30 } }, // char width\n  { title: 'Kategori_Produk', width: { wch: 20 } }, // char width\n  { title: 'Qty', width: { wch: 10 }, style: alignRight }, // char width\n  { title: 'Harga', width: { wch: 15 }, style: alignRight }, // char width\n  { title: 'Total', width: { wch: 15 }, style: alignRight }, // char width\n\n]\n\nconst columnsHeader = [{ title: '', width: { wch: 10 } }]\n\nclass ExcelAllJournal extends React.Component {\n  render() {\n    const { dataitem=[], filename, date } = this.props\n    const numFormat = { numFmt, ...alignRight }\n    // console.log(dataitem, 'DATA ITEMMMMD')\n\n    const dataHeader = [\n      [{ value: filename, style: { font: { bold: true } } }],\n      [{ value: `DATE ${date}`, style: { font: { bold: true } } }],\n    ]\n\n\n    // const formatCell = value => (typeof value === 'number' ? value : value.replace(/[,]/g, ''))\n\n    const data = (dataitem || []).map(el => [\n\n      { value: el.ItemCode || \"\" },\n      { value: el.ItemName || \"\" },\n      { value: el.CateName || \"\" },\n      {\n        value: +el.QtySi || 0,\n        style: {\n          ...numFormat,\n        },\n      },\n      {\n        value: +el.UnitPrice || 0,\n        style: {\n          ...numFormat,\n        },\n      },\n      {\n        value: +el.Amount|| 0,\n        style: {\n          ...numFormat,\n        },\n      },\n\n    ])\n\n    /**\n     * Columns : Array of Object\n     * data: Array Multidemensional\n     * */\n    const multiDataSet = [\n      { columns: columnsHeader, data: dataHeader },\n      { columns, data, ySteps: 3 },\n    ]\n\n    return (\n      <div>\n        <ExcelFile\n          filename={`${filename}_${date}`}\n          element={<Button {...this.props}>Excel</Button>}\n        >\n          <ExcelSheet dataSet={multiDataSet} name={filename} />\n        </ExcelFile>\n      </div>\n    )\n  }\n}\n\nexport default ExcelAllJournal\n","import React, {Component} from 'react';\nimport {Button, Form, Input, Table} from \"antd\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport * as moment from \"moment\";\nimport actions from \"../../../../redux/report/actions\";\nimport ExcelExport from './excel'\nimport {currencyFormat} from \"../../../../utils/helper/utilities\";\n\n\n\n@withRouter\n@connect(({ transaction, report }) => ({\n  transaction,\n  report,\n  contentStatus: transaction.contentStatus,\n  reportSalesItem : report.reportSalesItem\n}))\nclass ReportCustomer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentRef = React.createRef();\n    this.state = {\n      modalReturn: false,\n      from: moment().startOf('month').format(\"YYYY-MM-DD\"),\n      to: moment().format(\"YYYY-MM-DD\"),\n    }\n  }\n\n  handleSearch = () => {\n    const { dispatch} = this.props;\n\n    const { from, to} = this.state\n\n    const payload = {\n      from,\n      to,\n    }\n\n    dispatch({\n      type:actions.REPORT_SALES_ITEM,\n      payload\n    })\n\n  }\n\n  componentWillUnmount() {\n    const { dispatch} = this.props;\n\n\n    dispatch({\n      type:actions.SET_STATE,\n      payload: {\n        reportSalesItem: []\n      }\n    })\n  }\n\n\n  render() {\n\n    const { from, to} = this.state\n    const {reportSalesItem, report: {loadingReportItem}} = this.props\n\n\n    const columns = [\n\n\n      {\n        \"title\": \"Kode Produk\",\n        \"dataIndex\" : \"ItemCode\",\n        key: \"ItemCode\",\n        width: 100,\n      },\n      {\n        \"title\": \"Nama Produk\",\n        \"dataIndex\" : \"ItemName\",\n        key: \"ItemName\",\n        width: 250,\n      },\n      {\n        \"title\": \"Kategori Produk\",\n        \"dataIndex\" : \"CateName\",\n        key: \"CateName\",\n        width: 250,\n      },\n\n      {\n        \"title\": \"Qty\",\n        \"dataIndex\" : \"QtySi\",\n        key: \"QtySi\",\n        align: 'right',\n        width: 100,\n        render: d => currencyFormat(d, 0)\n      },\n      {\n        \"title\": \"Harga\",\n        \"dataIndex\" : \"UnitPrice\",\n        key: \"UnitPrice\",\n        align: 'right',\n        width: 150,\n        render: d => currencyFormat(d, 0)\n      },\n      {\n        \"title\": \"Diskon\",\n        \"dataIndex\" : \"DiscVal\",\n        key: \"DiscVal\",\n        align: 'right',\n        width: 150,\n        render: d => currencyFormat(d, 0)\n      },\n      {\n        \"title\": \"Total\",\n        \"dataIndex\" : \"Amount\",\n        key: \"Amount\",\n        align: 'right',\n        width: 150,\n        render: d => currencyFormat(d, 0)\n      },\n    ]\n\n\n\n    return (\n      <div className='container mx-auto p-4 h-screen'>\n        <div>\n          <Link to ='/kasir'>\n            <Button className='bg-green-500 text-white rounded leading-3'>ORDER BARU</Button>\n          </Link>\n\n          <Link to ='/pos/report'>\n            <Button className='bg-green-500 text-white rounded leading-3 ml-4'>LAPORAN</Button>\n          </Link>\n        </div>\n\n\n        <div className='mt-4'>\n          <Form layout='inline'>\n            <Form.Item label='Tanggal '>\n              <Input value={from} type='date' onChange={e => this.setState({from: e.target.value})} />\n            </Form.Item>\n            <Form.Item label=''>\n              <Input value={to} type='date' onChange={e => this.setState({to: e.target.value})} />\n            </Form.Item>\n            <Form.Item>\n              <Button type='primary' onClick={this.handleSearch}>Cari</Button>\n            </Form.Item>\n            <Form.Item>\n              <ExcelExport\n                filename='Laporan_Penjualan_By_Item'\n                type='primary'\n                date={`${from}_${to}`}\n                dataitem={ reportSalesItem}\n              />\n            </Form.Item>\n\n          </Form>\n\n\n        </div>\n\n        <div className='mt-4'>\n          <Table\n            dataSource={reportSalesItem}\n            columns={columns}\n            size='small'\n            loading={loadingReportItem}\n            scroll={{y: 400}}\n\n          />\n\n        </div>\n\n\n      </div>\n    );\n  }\n}\n\nexport default ReportCustomer;\n\n"],"sourceRoot":""}